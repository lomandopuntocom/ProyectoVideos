{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class testComponent {\n  constructor(http, router, baseUrl) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = baseUrl;\n    this.prueba_get();\n  }\n  prueba_get() {\n    this.http.get(this.baseUrl + 'equipo/seeEquipos').subscribe(result => {\n      console.log(result);\n    }, error => {\n      console.log(\"error\");\n    });\n  }\n  prueba_post(Id_equipo, Codigo_Equipo, Nombre_equipo, Estado_Equipo, Detalle_equipo) {\n    // Convertir el Id_equipo a número\n    const idEquipoNumber = Number(Id_equipo);\n    // Crear el objeto equipo basado en los parámetros recibidos\n    const nuevoEquipo = {\n      Id_equipo: idEquipoNumber,\n      Codigo_Equipo,\n      Nombre_equipo,\n      Estado_Equipo,\n      Detalle_equipo\n    };\n    // Hacer la solicitud POST\n    this.http.post(this.baseUrl + 'equipo/addEquipo', nuevoEquipo).subscribe(result => {\n      console.log('Success:', result);\n      alert('Equipo registrado con éxito');\n    }, error => {\n      console.error('Error:', error);\n      alert('Error al registrar el equipo');\n    });\n  }\n}\ntestComponent.ɵfac = function testComponent_Factory(t) {\n  return new (t || testComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject('BASE_URL'));\n};\ntestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: testComponent,\n  selectors: [[\"test\"]],\n  decls: 39,\n  vars: 0,\n  consts: [[3, \"submit\"], [\"equipoForm\", \"ngForm\"], [\"for\", \"Id_equipo\"], [\"type\", \"number\", \"id\", \"Id_equipo\", \"name\", \"Id_equipo\", \"required\", \"\"], [\"Id_equipo\", \"\"], [\"for\", \"Codigo_Equipo\"], [\"type\", \"text\", \"id\", \"Codigo_Equipo\", \"name\", \"Codigo_Equipo\", \"required\", \"\"], [\"Codigo_Equipo\", \"\"], [\"for\", \"Nombre_equipo\"], [\"type\", \"text\", \"id\", \"Nombre_equipo\", \"name\", \"Nombre_equipo\", \"required\", \"\"], [\"Nombre_equipo\", \"\"], [\"for\", \"Estado_Equipo\"], [\"type\", \"text\", \"id\", \"Estado_Equipo\", \"name\", \"Estado_Equipo\", \"required\", \"\"], [\"Estado_Equipo\", \"\"], [\"for\", \"Detalle_equipo\"], [\"type\", \"text\", \"id\", \"Detalle_equipo\", \"name\", \"Detalle_equipo\", \"required\", \"\"], [\"Detalle_equipo\", \"\"], [\"type\", \"submit\"]],\n  template: function testComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function testComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r1 = i0.ɵɵreference(6);\n        const _r2 = i0.ɵɵreference(13);\n        const _r3 = i0.ɵɵreference(20);\n        const _r4 = i0.ɵɵreference(27);\n        const _r5 = i0.ɵɵreference(34);\n        return i0.ɵɵresetView(ctx.prueba_post(_r1.value, _r2.value, _r3.value, _r4.value, _r5.value));\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"ID del Equipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"br\")(5, \"input\", 3, 4)(7, \"br\")(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\", 5);\n      i0.ɵɵtext(10, \"C\\u00F3digo del Equipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\")(12, \"input\", 6, 7)(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Nombre del Equipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\")(19, \"input\", 9, 10)(21, \"br\")(22, \"br\");\n      i0.ɵɵelementStart(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Estado del Equipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\")(26, \"input\", 12, 13)(28, \"br\")(29, \"br\");\n      i0.ɵɵelementStart(30, \"label\", 14);\n      i0.ɵɵtext(31, \"Detalle del Equipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"br\")(33, \"input\", 15, 16)(35, \"br\")(36, \"br\");\n      i0.ɵɵelementStart(37, \"button\", 17);\n      i0.ɵɵtext(38, \"Registrar Equipo\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB,EAASC,MAAc,EAA8BC,OAAe;IAApF,SAAI,GAAJF,IAAI;IAAqB,WAAM,GAANC,MAAM;IAAsC,YAAO,GAAPC,OAAO;IAE9F,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IAER,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACF,OAAO,GAAG,mBAAmB,CAAC,CAACG,SAAS,CACnEC,MAAM,IAAE;MACNC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB,CAAC,EAAEG,KAAK,IAAE;MAACF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAAC,CAAC,CAAC;EACtC;EAEAE,WAAW,CAACC,SAAiB,EAAEC,aAAqB,EAAEC,aAAqB,EAAEC,aAAqB,EAAEC,cAAsB;IACxH;IACA,MAAMC,cAAc,GAAGC,MAAM,CAACN,SAAS,CAAC;IAExC;IACA,MAAMO,WAAW,GAAG;MAClBP,SAAS,EAAEK,cAAc;MACzBJ,aAAa;MACbC,aAAa;MACbC,aAAa;MACbC;KACD;IAED;IACA,IAAI,CAACf,IAAI,CAACmB,IAAI,CAAM,IAAI,CAACjB,OAAO,GAAG,kBAAkB,EAAEgB,WAAW,CAAC,CAChEb,SAAS,CACRC,MAAM,IAAG;MACPC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAAC;MAC/Bc,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,EACDX,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BW,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,CACF;EACL;;AAxCWtB,aAAa;mBAAbA,aAAa,6FAE6C,UAAU;AAAA;AAFpEA,aAAa;QAAbA,aAAa;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCT1BC,kCAAwJ;MAA7HA;QAAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA,OAAUA,qFAAiH;MAAA,EAAC;MACnJA,gCAAuB;MAAAA,8BAAc;MAAAA,iBAAQ;MAAAA,qBAAI;MAGjDA,gCAA2B;MAAAA,wCAAkB;MAAAA,iBAAQ;MAAAA,sBAAI;MAGzDA,iCAA2B;MAAAA,mCAAkB;MAAAA,iBAAQ;MAAAA,sBAAI;MAGzDA,kCAA2B;MAAAA,mCAAkB;MAAAA,iBAAQ;MAAAA,sBAAI;MAGzDA,kCAA4B;MAAAA,oCAAmB;MAAAA,iBAAQ;MAAAA,sBAAI;MAG3DA,mCAAsB;MAAAA,iCAAgB;MAAAA,iBAAS","names":["testComponent","constructor","http","router","baseUrl","prueba_get","get","subscribe","result","console","log","error","prueba_post","Id_equipo","Codigo_Equipo","Nombre_equipo","Estado_Equipo","Detalle_equipo","idEquipoNumber","Number","nuevoEquipo","post","alert","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\dikyd\\Desktop\\UCB 4to\\Diseño de Software\\Inventario\\ClientApp\\src\\app\\test\\test.component.ts","C:\\Users\\dikyd\\Desktop\\UCB 4to\\Diseño de Software\\Inventario\\ClientApp\\src\\app\\test\\test.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.css']\r\n})\r\nexport class testComponent {\r\n\r\n  constructor(private http: HttpClient,private router: Router, @Inject('BASE_URL') private baseUrl: string) \r\n  { \r\n    this.prueba_get();\r\n  }\r\n\r\n  prueba_get()\r\n  {\r\n    this.http.get<Equipo[]>(this.baseUrl + 'equipo/seeEquipos').subscribe(\r\n      result=>{\r\n        console.log(result);\r\n      }, error=>{console.log(\"error\");})\r\n  }\r\n\r\n  prueba_post(Id_equipo: string, Codigo_Equipo: string, Nombre_equipo: string, Estado_Equipo: string, Detalle_equipo: string) {\r\n    // Convertir el Id_equipo a número\r\n    const idEquipoNumber = Number(Id_equipo);\r\n\r\n    // Crear el objeto equipo basado en los parámetros recibidos\r\n    const nuevoEquipo = {\r\n      Id_equipo: idEquipoNumber,\r\n      Codigo_Equipo,\r\n      Nombre_equipo,\r\n      Estado_Equipo,\r\n      Detalle_equipo\r\n    };\r\n\r\n    // Hacer la solicitud POST\r\n    this.http.post<any>(this.baseUrl + 'equipo/addEquipo', nuevoEquipo)\r\n      .subscribe(\r\n        result => {\r\n          console.log('Success:', result);\r\n          alert('Equipo registrado con éxito');\r\n        },\r\n        error => {\r\n          console.error('Error:', error);\r\n          alert('Error al registrar el equipo');\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\ninterface Equipo\r\n{\r\n  Id_equipo: number;\r\n  Codigo_Equipo: string;\r\n  Nombre_equipo: string\r\n  Estado_Equipo: string;\r\n  Detalle_equipo: string;\r\n}","<form #equipoForm=\"ngForm\" (submit)=\"prueba_post(Id_equipo.value, Codigo_Equipo.value, Nombre_equipo.value, Estado_Equipo.value, Detalle_equipo.value)\">\r\n    <label for=\"Id_equipo\">ID del Equipo:</label><br>\r\n    <input type=\"number\" id=\"Id_equipo\" name=\"Id_equipo\" required #Id_equipo><br><br>\r\n  \r\n    <label for=\"Codigo_Equipo\">Código del Equipo:</label><br>\r\n    <input type=\"text\" id=\"Codigo_Equipo\" name=\"Codigo_Equipo\" required #Codigo_Equipo><br><br>\r\n  \r\n    <label for=\"Nombre_equipo\">Nombre del Equipo:</label><br>\r\n    <input type=\"text\" id=\"Nombre_equipo\" name=\"Nombre_equipo\" required #Nombre_equipo><br><br>\r\n  \r\n    <label for=\"Estado_Equipo\">Estado del Equipo:</label><br>\r\n    <input type=\"text\" id=\"Estado_Equipo\" name=\"Estado_Equipo\" required #Estado_Equipo><br><br>\r\n  \r\n    <label for=\"Detalle_equipo\">Detalle del Equipo:</label><br>\r\n    <input type=\"text\" id=\"Detalle_equipo\" name=\"Detalle_equipo\" required #Detalle_equipo><br><br>\r\n  \r\n    <button type=\"submit\">Registrar Equipo</button>\r\n  </form>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}